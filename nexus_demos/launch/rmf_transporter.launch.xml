<?xml version='1.0' ?>

<launch>
  <arg name="bidding_time_window" description="Time window in seconds for task bidding process" default="2.0"/>
  <arg name="building_map_name" default="depot" description="Name of the map to launch for simulation"/>
  <arg name="initial_map" default="L1" description="Initial map name for the visualizer"/>
  <arg name="server_uri" default="" description="The URI of the api server to transmit state and task information."/>
  <arg name="sim_update_rate" default='100'/>
  <arg name="headless" default="true"/>
  <arg name="use_simulator" default="true"/>
  <arg name="use_unique_hex_string_with_task_id" default="true" description="Appends a unique hex string to the task ID"/>

  <!-- Traffic Schedule  -->
  <node pkg="rmf_traffic_ros2" exec="rmf_traffic_schedule" output="both" name="rmf_traffic_schedule_primary">
    <param name="use_sim_time" value="$(var use_simulator)"/>
  </node>

  <!-- Blockade Moderator -->
  <node pkg="rmf_traffic_ros2" exec="rmf_traffic_blockade" output="both">
    <param name="use_sim_time" value="$(var use_simulator)"/>
  </node>

  <!-- Building Map  -->
  <group>
    <node pkg="rmf_building_map_tools" exec="building_map_server" args="$(find-pkg-share nexus_demos)/config/rmf/maps/$(var building_map_name)/$(var building_map_name).building.yaml">
      <param name="use_sim_time" value="$(var use_simulator)"/>
    </node>
  </group>

  <!-- Visualizer -->
  <group>
    <include file="$(find-pkg-share rmf_visualization)/visualization.launch.xml">
      <arg name="use_sim_time" value="$(var use_simulator)"/>
      <arg name="map_name" value="$(var initial_map)"/>
      <arg name="headless" value="true"/>
    </include>
  </group>

  <!-- Dispatcher Node -->
  <group>
    <node pkg="rmf_task_ros2" exec="rmf_task_dispatcher"  output="screen">
      <param name="use_sim_time" value="$(var use_simulator)"/>
      <param name="bidding_time_window" value="$(var bidding_time_window)"/>
      <param name="use_unique_hex_string_with_task_id" value="$(var use_unique_hex_string_with_task_id)"/>
      <param name="server_uri" value="$(var server_uri)"/>
    </node>
  </group>

  <!-- DeliveryRobot fleet adapter -->
  <group>
    <include file="$(find-pkg-share rmf_demos_fleet_adapter)/launch/fleet_adapter.launch.xml">
      <arg name="use_sim_time" value="$(var use_simulator)"/>
      <arg name="nav_graph_file" value="$(find-pkg-share nexus_demos)/config/rmf/maps/$(var building_map_name)/nav_graphs/0.yaml" />
      <arg name="config_file" value="$(find-pkg-share nexus_demos)/config/rmf/deliveryRobot_config.yaml"/>
    </include>
  </group>

  <node pkg="nexus_workcell_orchestrator" exec="nexus_workcell_orchestrator" name="rmf_nexus_transporter" output="both">
    <param name="capabilities" value="[nexus::capabilities::RMFRequestCapability]"/>
    <param name="bt_path" value="$(find-pkg-share nexus_demos)/config/rmf"/>
  </node>

  <!-- Simulator launch -->
  <let name="gz_headless" if="$(var headless)" value="-s"/>
  <let name="gz_headless" unless="$(var headless)" value="" />
  <let name="world_path" value="$(find-pkg-share nexus_demos)/config/rmf/maps/$(var building_map_name)/$(var building_map_name).world" />
  <let name="model_path" value="$(find-pkg-share nexus_demos)/config/rmf/maps/$(var building_map_name)/models" />

  <executable if="$(var use_simulator)" cmd="gz sim $(var gz_headless) -r -v 3 $(var world_path) -z $(var sim_update_rate)" output="both">
    <env name="GZ_SIM_RESOURCE_PATH" value="$(var model_path):$(var world_path)" />
    <env name="GZ_SIM_SYSTEM_PLUGIN_PATH" value="$(find-pkg-prefix rmf_robot_sim_gz_plugins)/lib/rmf_robot_sim_gz_plugins"/>
  </executable>

  <!-- ros_gz bridge for simulation clock -->
  <node if="$(var use_simulator)" pkg="ros_gz_bridge" exec="parameter_bridge"
    args="/clock@rosgraph_msgs/msg/Clock[gz.msgs.Clock"
    />

</launch>
